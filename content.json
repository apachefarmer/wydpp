{"pages":[{"title":"Categories","date":"2023-09-07T01:29:44.924Z","path":"categories/index.html","text":""},{"title":"About","date":"2023-09-07T01:29:44.924Z","path":"about/index.html","text":""},{"title":"Tags","date":"2023-09-07T01:29:44.924Z","path":"tags/index.html","text":""}],"posts":[{"title":"","date":"2023-09-07T02:11:01.711Z","path":"wiki/05-spring/test/","text":"图片测试","tags":[],"categories":[{"name":"05-spring","slug":"05-spring","permalink":"https://wydpp.github.io/categories/05-spring/"}]},{"title":"使用github和hexo搭建个人博客","date":"2023-09-06T02:29:06.000Z","path":"wiki/100-杂谈/使用github和hexo搭建个人博客/","text":"最近使用githubpages+hexo搭建了个人博客，感觉还不错，在此分享下搭建过程。 准备工作1.git环境首先，拥有自己的github账号。 其次，电脑安装了git，并且能够正常和github交互（从github拉取和提交信息）。 作为软件开发者，这两点相对比较简单，具体操作就不在此赘述。 2.node环境要求电脑安装了的nodejs。访问nodejs.org下载windows（或自己电脑操作系统对应版本）的安装包安装即可。我当前使用的nodejs版本是v18.17.0。 12PS C:\\Users\\wydpp&gt; node -vv18.17.0 博客搭建1.github创建个人博客仓库再github上点击news repository创建一个新的仓库，仓库名称repository name一般是github账号.github.io，比如我的仓库名称是：wydpp.github.io，这里我使用test.github.io代替。 仓库要是Public公开的。 仓库创建完成之后，可以得到项目的地址，我这里是 git@github.com:wydpp/test.github.io.git 2.电脑中使用hexo创建博客系统安装hexo1PS npm install -g hexo-cli hexo建站新建一个博客文件夹，如 D:\\home\\blog，在该目录下执行命令hexo init，生成hexo博客需要的文件。 1234PS D:\\home\\blog&gt; hexo initINFO Cloning hexo-starter https://github.com/hexojs/hexo-starter.gitINFO Install dependenciesINFO Start blogging with Hexo! 命令执行成功后，blog文件夹内会有一系列文件 在命令行执行hexo server，可以本地启动hexo服务，访问博客 http://localhost:4000/。 1234PS D:\\home\\blog&gt; hexo serverINFO Validating configINFO Start processingINFO Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop. 本地可以看到基于hexo的网站了 把本地hexo的创建的文件信息同步到github打开blog文件夹中的_config.yml文件，修改# Deployment配置 12345678# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy: type: &#x27;git&#x27; #reop地址是GitHub创建的仓库地址 repo: git@github.com:wydpp/test.github.io.git #要上传的github仓库的分支，默认main branch: main 配置完成之后，推荐安装一个工具进行同步github，blog目录下命令行输入命令 1npm install hexo-deployer-git 没次要把博客文件同步到github，只需要在命令行中，在blog文件夹下，执行命令hexo clean和hexo deploy： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758PS D:\\home\\blog&gt; hexo cleanINFO Validating configINFO Deleted database.#同步到githubPS D:\\home\\blog&gt; hexo deployINFO Validating configINFO Deploying: gitINFO Setting up Git deployment...Initialized empty Git repository in D:/home/blog/.deploy_git/.git/[master (root-commit) b57308b] First commit 1 file changed, 0 insertions(+), 0 deletions(-) create mode 100644 placeholderINFO Clearing .deploy_git folder...INFO Copying files from public folder...INFO Copying files from extend dirs...warning: LF will be replaced by CRLF in 2023/09/06/hello-world/index.html.The file will have its original line endings in your working directorywarning: LF will be replaced by CRLF in archives/2023/09/index.html.The file will have its original line endings in your working directorywarning: LF will be replaced by CRLF in archives/2023/index.html.The file will have its original line endings in your working directorywarning: LF will be replaced by CRLF in archives/index.html.The file will have its original line endings in your working directorywarning: LF will be replaced by CRLF in css/style.css.The file will have its original line endings in your working directorywarning: LF will be replaced by CRLF in fancybox/jquery.fancybox.min.js.The file will have its original line endings in your working directorywarning: LF will be replaced by CRLF in index.html.The file will have its original line endings in your working directorywarning: LF will be replaced by CRLF in js/jquery-3.6.4.min.js.The file will have its original line endings in your working directorywarning: LF will be replaced by CRLF in js/script.js.The file will have its original line endings in your working directory[master 232921b] Site updated: 2023-09-06 18:30:41 12 files changed, 2485 insertions(+) create mode 100644 2023/09/06/hello-world/index.html create mode 100644 archives/2023/09/index.html create mode 100644 archives/2023/index.html create mode 100644 archives/index.html create mode 100644 css/images/banner.jpg create mode 100644 css/style.css create mode 100644 fancybox/jquery.fancybox.min.css create mode 100644 fancybox/jquery.fancybox.min.js create mode 100644 index.html create mode 100644 js/jquery-3.6.4.min.js create mode 100644 js/script.js delete mode 100644 placeholderEnumerating objects: 27, done.Counting objects: 100% (27/27), done.Delta compression using up to 12 threadsCompressing objects: 100% (19/19), done.Writing objects: 100% (27/27), 278.88 KiB | 839.00 KiB/s, done.Total 27 (delta 4), reused 0 (delta 0), pack-reused 0remote: Resolving deltas: 100% (4/4), done.To github.com:wydpp/test.github.io.git + 7900f17...232921b HEAD -&gt; main (forced update)Branch &#x27;master&#x27; set up to track remote branch &#x27;main&#x27; from &#x27;git@github.com:wydpp/test.github.io.git&#x27;.INFO Deploy done: git 执行成功后，回到github,会发现仓库中已经有了hexo网站的文件了 github最后一步操作回到github博客仓库，点击settings-Pages Beanch选择main,点击save。此时点击actions，会发现github已经在构建项目了。 构建成功后，在回到Settings-&gt;Pages页面，会找到博客的访问地址。 浏览器访问：https:&#x2F;&#x2F;wydpp.github.io&#x2F;test.github.io&#x2F; 即可。 博客书写我个人目前是在电脑的blog文件夹，source/_posts目录内，编写md文件（md文档编辑工具可使用自己习惯的即可）。 编写完成后，命令行执行 hexo clean和hexo deploy上传到github即可。 参考资料 Hexo+GitHub搭建个人博客教程（2023最新版） 部署Hexo","tags":[{"name":"杂谈","slug":"杂谈","permalink":"https://wydpp.github.io/tags/%E6%9D%82%E8%B0%88/"}],"categories":[{"name":"100-杂谈","slug":"100-杂谈","permalink":"https://wydpp.github.io/categories/100-%E6%9D%82%E8%B0%88/"}]},{"title":"sentinel架构","date":"2023-08-29T09:13:07.000Z","path":"wiki/08-sentinel/sentinel架构/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment 参考资料","tags":[],"categories":[{"name":"08-sentinel","slug":"08-sentinel","permalink":"https://wydpp.github.io/categories/08-sentinel/"}]},{"title":"sentinel限流原理","date":"2023-08-29T07:11:43.000Z","path":"wiki/08-sentinel/sentinel限流原理/","text":"参考资料","tags":[],"categories":[{"name":"08-sentinel","slug":"08-sentinel","permalink":"https://wydpp.github.io/categories/08-sentinel/"}]}],"categories":[{"name":"05-spring","slug":"05-spring","permalink":"https://wydpp.github.io/categories/05-spring/"},{"name":"100-杂谈","slug":"100-杂谈","permalink":"https://wydpp.github.io/categories/100-%E6%9D%82%E8%B0%88/"},{"name":"08-sentinel","slug":"08-sentinel","permalink":"https://wydpp.github.io/categories/08-sentinel/"}],"tags":[{"name":"杂谈","slug":"杂谈","permalink":"https://wydpp.github.io/tags/%E6%9D%82%E8%B0%88/"}]}